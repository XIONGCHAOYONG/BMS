<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.x.mapper.LendMapper">
    <resultMap id="LendVOMapping" type="com.x.pojo.vo.LendVO">
        <id property="lendId" column="lendId"/> <!-- 唯一标识 -->
        <result property="title" column="title"/>
        <result property="author" column="author"/>
        <association property="lend" javaType="com.x.pojo.entity.Lend">
            <result property="lendId" column="lendId"/>
            <result property="userId" column="userId"/>
            <result property="bookId" column="bookId"/>
            <result property="borrowDate" column="borrowDate"/>
            <result property="dueDate" column="dueDate"/>
            <result property="returnDate" column="returnDate"/>
            <result property="status" column="status"/>
            <result property="renewCount" column="renewCount"/>
        </association>
    </resultMap>
    <update id="batchUpdateStatus">
        UPDATE lend
        SET status = #{status}
        WHERE lend_id IN
        <foreach collection="lendIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <select id="getAllLend" resultMap="LendVOMapping">
        SELECT l.lend_id AS lendId,
        l.user_id AS userId,
        l.book_id AS bookId,
        l.borrow_date AS borrowDate,
        l.due_date AS dueDate,
        l.return_date AS returnDate,
        l.status AS status,
        l.renew_count AS renewCount,
        b.title AS title,
        b.author AS author
        FROM lend l
        JOIN books b ON l.book_id = b.book_id
        where l.user_id = #{userId}
        ORDER BY l.lend_id DESC
    </select>
    <select id="getCurrentLend" resultMap="LendVOMapping">
        SELECT
        l.lend_id AS lendId,
        l.user_id AS userId,
        l.book_id AS bookId,
        l.borrow_date AS borrowDate,
        l.due_date AS dueDate,
        l.return_date AS returnDate,
        l.status AS status,
        l.renew_count AS renewCount,
        b.title AS title,
        b.author AS author
        FROM lend l
        JOIN books b ON l.book_id = b.book_id
        WHERE l.status in (#{unReturn},#{reLend})
        AND l.user_id = #{userId}
        ORDER BY l.lend_id DESC
    </select>
    <select id="getLendByBookId" resultMap="LendVOMapping">
        SELECT
        l.lend_id AS lendId,
        l.user_id AS userId,
        l.book_id AS bookId,
        l.borrow_date AS borrowDate,
        l.due_date AS dueDate,
        l.return_date AS returnDate,
        l.status AS status,
        l.renew_count AS renewCount,
        b.title AS title,
        b.author AS author
        FROM lend l
        JOIN books b ON l.book_id = b.book_id
        WHERE l.user_id = #{userId} AND l.book_id = #{bookId}
        ORDER BY l.lend_id DESC
    </select>

    <select id="getOverDueIds" resultType="java.lang.Long">
        SELECT lend_id
        FROM lend
        WHERE CURDATE() > due_date
        <if test="ids != null and ids.size > 0">
            AND lend_id IN
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>



</mapper>